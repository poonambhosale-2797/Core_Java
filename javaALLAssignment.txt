01.Write a program to print Hello World. Compile and run it using command prompt.
Ans:-
class Hlw{

	public static void main (String args[]){
	
	System.out.println("Hello World");	

	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------
02.Write a program to declare a variable named rollNo of integer type. Assign it a value (let say 100) to it and print the following statement roll no = 100 .
Ans:-
class Var {

	public static void main (String args[]){
	
	int rollNo = 100;

	System.out.println(rollNo);
	
	}

}
----------------------------------------------------------------------------------------------------------------------------------------------------------------
03.Find the result of following expressions. You need to determine the primitive data type of the variable by looking carefully the given expression and initialize variables by any random value.
A. y = x2 + 3x - 7 (print value of y) 
Ans:-
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
B. y = x++ + ++x (print value of x and y) 
C. z = x++ - --y - --x  +  x++ (print value of x ,y and z)
D. z = x && y || !(x || y)  (print value of z) [ x, y, z are boolean variables ]
Ans:-
class Expr {

	public static void main (String args[]){

	int x = 2;

//=================1===========================	
	int y = (x*x)+3*x-7;
	System.out.println(y); //3
//==================2==========================
	int y1 = x++ + ++x;	
	System.out.println(y1); //6

//==================3==========================

int xx=2;
int yy=3;

	int z = xx++ - --yy - --xx + xx++;	
//			2/3		2/2		2/2		2/3
	
	System.out.println("x:-> "+xx);
	System.out.println("y:-> "+yy);
	System.out.println("z:-> "+z);
	
//==================4==========================
	boolean x2 = true;
	boolean y2 = true;	

	boolean z1 = x2 && y2 || !(x2 || y2);
	System.out.println("z1:-> "+z1);		

	}

	

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
04.Write a program that initializes 2 byte type of variables. Add the values of these variables and store in a byte type of variable.
 [Note: primitive down casting is required in this program ] .
 Ans:-
 class ByteVar {

	public static void main (String args[]){



	byte no1 = 4;
	byte no2 = 1;
	
	int op = (no1 + no2);

	System.out.println((byte)op);

	}

}
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
05.Write a program that takes user’s name as command line argument and prints Welcome <entered user name>.
Ans:-
class Cla {

	public static void main (String args[]){
	
	String name = args[0];
//	String s2 = args[1];

//	int i = Integer.parseInt(name);
//	int j = Integer.parseInt(s2);
//	int k = i+j;
	
	System.out.println("Welcome "+name);
	

	}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
06.Write a program that takes radius of a circle as input. Read the entered radius using Scanner class. 
Then calculate and print the area and circumference of the circle.
Ans:-
import java.util.Scanner;
//import java.lang.*;

class Acircle {

	public static void main (String args[]){
	
	Scanner sc = new Scanner(System.in);
	
	double radius = sc.nextFloat();
	
	double result = Math.PI*(Math.pow(radius,2));
	System.out.println(result);

	}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
07.Write a program to calculate sum of 5 subject’s marks & find percentage. Take the obtained marks from user 
using Scanner class. Output should be in this format[ percentage marks = 99 % ]. Use concatenation operator here.
 Ans:-
 import java.util.Scanner;

class Avg {

	public static void main (String args[]){
	
	Scanner sc = new Scanner(System.in);
	int no1 = sc.nextInt();
	int no2 = sc.nextInt();
	int no3 = sc.nextInt();
	int no4 = sc.nextInt();
	int no5 = sc.nextInt();

	float total = (no1+no2+no3+no4+no5)/5;

	System.out.println( "percentage marks= "+total+"%");


	}

}
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
08.Write a program to find the simple interest. Take the principle amount, rate of interest and time from user using Scanner class.
Ans:-
import java.util.Scanner;

class SimpI {

	public static void main (String args[]){
	
	Scanner sc = new Scanner(System.in);

	int p = sc.nextInt();
	int r = sc.nextInt();
	int n = sc.nextInt();

	double si = (p*r*n)/100;
	
	System.out.println("Simple interest is: "+si);	

	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
09.Write a program to read the days (eg. 670 days) as integer value using Scanner class. Now convert the entered days into
 complete years, months and days and print them.
Ans:-
import java.util.Scanner;

class DaysConv {

	public static void main (String args[]){
	
	Scanner sc = new Scanner(System.in);
	int nod = sc.nextInt(); //665 670

	int cyr=0;

	int cmn=0;
	
	while (nod>=365){
		nod-=365; //665-365=>300<--nod
		cyr++;
	}
	while (nod>=30){
		nod-=30;//300-30=>270,270-30=>240,
		cmn++;//1,2
	}
	
	System.out.println(cyr+" years "+cmn+" months "+nod+" days");

	
}
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10.Write a program to convert temperature from Fahrenheit to Celsius. Take Fahrenheit as input using Scanner class. [ formula : C= 5*(f-32)/9 ]
Ans:-
import java.util.Scanner;

class TempConv {

	public static void main (String args[]){

	Scanner sc = new Scanner(System.in);
	float fah = sc.nextFloat();

	float conv = 5*(fah -32)/9;

	System.out.println("Temperature in Celsius: "+conv);	

	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11.Write a program to swap two numbers without using third variable.
Ans:-
import java.util.Scanner;

class Swap {

	public static void main (String args[]){

	Scanner sc = new Scanner(System.in);
	int no1 = sc.nextInt();
	int no2 = sc.nextInt();

	no1 = no1 + no2;	//no1: 10 + no2: 5=>15
	no2 = no1 - no2;	//no1: 15 - 5 =>10
	no1 = no1 - no2;	//no2: 10 - 5 => 5
	
	System.out.println("First Number: "+no1+"\n Second number: "+no2);
	}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
12.In a company an employee is paid as under: If his basic salary is less than Rs. 10000, then HRA = 10% 
of basic salary and DA = 90% of basic salary. If his salary is either equal to or above Rs. 10000, then HRA = Rs. 
2000 and DA = 98% of basic salary. If the employee's salary is input by the user write a program to find his gross salary. 
[ formula : GS= Basic + DA + HRA ]
Ans:-
import java.util.Scanner;

class EmpSal {

	public static void main (String args[]){

	Scanner sc = new Scanner(System.in);
	float sal = sc.nextInt();

	
	if(sal <10000){

	float hra = 0.10F * sal;
	float da = 0.90F *sal;
	
	float grs = sal + da + hra;

	System.out.println(grs);
	
	}else{
	
	float hra =2000F;
	float da = 0.98F *sal;
	
	float grs = sal + da + hra;

	System.out.println(grs);
		

	}

	

	}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------
13.Program to find greatest in 3 numbers. [ once using if else statement and then using ternary operator ( logical operator) ]  
Ans:-
import java.util.Scanner;

class Max {

	public static void main (String args[]){

	Scanner sc = new Scanner(System.in);
	
	int no1 = sc.nextInt();
	int no2 = sc.nextInt();
	int no3 = sc.nextInt();

	int max = (no1 > no2) ? (no1 > no3 ? no1 : no3) : (no2 > no3 ? no2 : no3);
	
	System.out.println("Maximum is: "+max);

//	if(no1>no2)? ( (no1>no3)?System.out.println(no1): System.out.println(no3) ):( (no2>no3)?System.out.println(no2):System.out.println(no3) );

	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
14.Program to check that entered year is a leap year or not.
Ans:-
import java.util.Scanner;

class LeapYr{

	public static void main (String args[]){
	
	Scanner sc = new Scanner(System.in);
	
	int yr = sc.nextInt();

	if(yr % 4==0 && yr % 100 !=0 || yr %400 ==0){
	
	System.out.println("It is a leap year");
	}else{

	System.out.println("It is a NOT leap year");

	}

	}

}
---------------------------------------------------------------------------------------------------------------------------------------------------------------
15.Accept person’s gender (character m for male and f for female), age (integer), as input and then check 
whether person is eligible for marriage or not.
Ans:-
import java.util.Scanner;

class LegalAge {

	public static void main (String args[]){
	
	Scanner sc = new Scanner(System.in);
	
	String gender = sc.next();
	int age = sc.nextInt();
	
	int fAge = 18;
	int mAge = 24;
//gender == "female" &&  gender == "male" && 
	if( gender.equals("female") && age >fAge ){
	System.out.println("Valid age for marriage");
	}else if(gender.equals("male") && age >mAge){
	System.out.println("Valid age for marriage");
	}
	else{
	System.out.println("NOT a valid age for marriage");
	}

	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------
16.Write a program to print table of any entered n-*umber using loop.
Ans:-
import java.util.Scanner;

class sixteen{
    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int num=sc.nextInt();

        for(int i=1; i<=10; i++){

            System.out.println(num*i);
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------
17.Write a program to reverse a given number.
Ans:-
import java.util.Scanner;

class seventeen{

    public static void main(String[] args) {
        
        Scanner sc= new Scanner(System.in);

        int num= sc.nextInt();

        int rem;
        while(num>0)
        {
            rem=num%10;
            num=num/10;
            System.out.print(rem);
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------
18.Program to check whether number is prime or not.
Ans:-import java.util.Scanner;

class twenty{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int a=sc.nextInt();

        int b=sc.nextInt();

        int flag=0;

        int i;
        for( i=a;i<=b;++i){

            for(int j=1; j<=i/2;j++){

                if(i%j==0){

                    flag++;
                }
            }

            if(flag==2){
                System.out.println("Prime="+i);
            }
        }
    }
}
----------------------------------------------------------------------------------------------------
19.Calculate  series : 12+22+32+42+.........+n2
Ans:-
import java.util.Scanner;

class nineteen{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int num=sc.nextInt();

        int no=12;

        int sum=0;

        System.out.print(no);
        
        for(int i=1;i<=num;i++)
        {
            sum=sum+no;
            no=no+10;
            System.out.print(" + "+no);
        }

        System.out.println(" = "+sum);
    }
}


------------------------------------------------------------------------------------------------
20.Print all prime numbers between two given numbers. [ break continue ]
Ans:-import java.util.Scanner;

class twenty{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int a=sc.nextInt();

        int b=sc.nextInt();


        int i;
        for( i=a;i<=b;++i){

            int flag=0;
            
            for(int j=1; j<=i;j++){

                if(i%j==0){

                    flag++;
                }
            }

            if(flag==2){
                System.out.println("Prime="+i);
            }
        }
    }
}


-----------------------------------------------------------------------------------------------
21.Program to show sum and average of 10 element array. Accept array elements from user. 
Ans:-
import java.util.Scanner;

class twentyone{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int ar[]=new int[10];

		int sum=0;

        for(int i=0;i<ar.length;i++){

			ar[i]=sc.nextInt();
			sum=sum+ar[i];
		}
		
		System.out.println("Sum = "+sum);

        
    }
}
-------------------------------------------------------------------------------------------------
22.Sort a ten element array in descending order.
Ans:-
import java.util.Scanner;

class twentytwo{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int ar[]=new int[5];

        for(int i=0;i<5;i++){

            ar[i]=sc.nextInt();
        }

        for(int i=0;i<5;i++){

            for(int j=i+1;j<5;j++){

                if(ar[i]>ar[j]){

                    ar[j]=ar[i];
                }
            }

            
        }
        for(int k=4;k>=0;k--){
        System.out.println(ar[k]);
    }
    
    }
}
------------------------------------------------------------------------------------------------------
23.Write a program to reverse the array elements.
Ans:-
import java.util.Scanner;

class twentythree{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int ar[]=new int[5];

        for(int i=0;i<5;i++){

            ar[i]=sc.nextInt();
        }

        for(int i=4;i>=0;i--){

            System.out.println(ar[i]);
        }
    }
}
------------------------------------------------------------------------------------------------------
24.Write a program to search an element in the array.
Ans:-import java.util.Scanner;

class twentyfour{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int ar[]= new int[5];

        System.out.println("Enter 5 elemnts");

        for(int i=0;i<5;i++){

            ar[i]=sc.nextInt();

        }

        System.out.println("Enter elemnt to be searched");

        int b=sc.nextInt();

        int found=0;
        for(int i=0;i<5;i++){
            if(ar[i]==b){
                found++;
            }
            
            }

            if(found!=0){

                System.out.println("Element found");
            }
            else{
                System.out.println("Element not found");
            }
               
                
        }
    }

--------------------------------------------------------------------------------------------------------
25.Write the program to find the sum of even elements and sum of odd elements present
 in the array of integer type.
 Ans:-
 import java.util.Scanner;

class twentyfive{

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);

        int ar[]=new int[8];

        for(int i=0;i<8;i++){

            ar[i]=sc.nextInt();
        }

        int sume=0;
        int sumo=0;
        
        for(int i=0;i<8;i++){
            
            if(ar[i] % 2 == 0){

            sume+=ar[i];
            }
        else{
            sumo=sumo+ar[i];
        }

        }
        System.out.println("sum of even="+sume);
        System.out.println("sum of odd="+sumo);
                
    }
}
----------------------------------------------------------------------------------------------------------------------------
26.Create an array of 17 elements in 5 rows.  And calculate sum of all elements.
Ans:-
import java.util.Scanner;
class SumOfElement{
                    public static void main(String args[]){
	                Scanner sc = new Scanner(System.in);

		System.out.println("Enter rows");
		int r=sc.nextInt();

		int arr [ ] [ ] =new int [r] [ ];
		int sum=0;

		for(int i=0;i<arr.length;i++){
			System.out.println("Enter no. of columns:");
			int c = sc.nextInt();
			arr[i]=new int [c];
				for(int j=0;j<arr[i].length;j++){
			 	System.out.println("Enter elements");
				 arr[i][j]=sc.nextInt();
				  
					}

				        }
		for(int ar[]:arr){
			for(int a:ar){
			System.out.print(" "+a);
                                                    sum = sum+a;
			
			}
		
		System.out.println(" ");
		}
                                System.out.println("Sum of the elements in array is "+sum);
	  }
          }
--------------------------------------------------------------------------------------------------------------------
27.Write a program to fine the smallest and greatest number present in the array of integer type.
Ans:-
import java.util.Scanner;

class MinMaxElement{

	public static void main (String args[]){

		Scanner sc = new Scanner(System.in);
                  	int arr[]=new int[5];

		for(int i=0;i<arr.length;i++)
		{
		 System.out.println("Enter the elements");
		  arr[i]=sc.nextInt();
		}

                                 	  int min = arr[0];
	                   int max = arr[0];
                                   
		for(int a : arr){
		System.out.print(" "+a);
		}

                                
		
		for (int i = 1; i < arr.length; i++)  
		{
			if (arr[i] > max) 
			{
				max = arr[i];
			}
			if (arr[i] < min) 
			{
				min = arr[i];
			}
		}

		System.out.println("\nLargest Number in a given array is : " + max+ " and Smallest Number in a given array is : " + min);
			
		
	}

}

--------------------------------------------------------------------------------------------------------------
28.Initialize one String type of array and print the elements using for each loop.
Ans:-
import java.util.Scanner;
class StringArray{
	
	public static void main(String args[]){
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter no. words to be print in array:");
                                   int num=sc.nextInt();
		
		String[] names=new String[num];
	
		for(int i=0;i<num;i++){
		System.out.println("Enter the name");
		names[i]=sc.next();
   		}

		for(String a : names){
		System.out.print(" "+a);
                                     }
			
	}
}
---------------------------------------------------------------------------------------------------------------------
29.Write a program to print the total number of one-D arrays in a two-D array and the
 number of elements in every one-D array present in the two-D arrays.
 Ans:-import java.util.Scanner;
class CountArrays{

	public static void main (String args[]){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter size of 2-D array: ");
		int row = sc.nextInt();
		int col = sc.nextInt();

		int arr[][] = new int[row][col];
		
		for(int i=0; i<arr.length; i++){
			for(int j=0; j<arr[i].length; j++){
				System.out.println("Enter a number: ");
				arr[i][j]=sc.nextInt();
			}
		}

		for(int i=0; i<arr.length; i++){
			System.out.println("Size of "+i+" array is: "+(arr[i].length));
			System.out.println("Elements in "+i+"array are:");
			for(int j=0; j<arr[i].length; j++){
				System.out.print(" "+arr[i][j]);
				
			}
			System.out.println("");
		}
		

	}
}
 -------------------------------------------------------------------------------------------------------------------------
30.Create an integer type 2-D array of size [3X3]. Take the elements from the user and then 
calculate the sum of the elements present in the diagonal.
Ans:-
import java.util.Scanner;
class DiagonalArray{
      public static void main(String args[]){
	Scanner sc=new Scanner(System.in);
	int arr[][]=new int[3][3];
	
	for (int i=0;i<arr.length;i++){
	   for(int j=0;j<arr.length;j++){
 		System.out.print("Enter a number:");
		arr[i][j]=sc.nextInt();
		}
	} 

                  int ldiag=0;
	int  rdiag=0;
	 
	for(int i=0;i<arr.length;i++){
	  for(int j=0;j<arr.length;j++){
  	    
                        if(i==j){
		ldiag=ldiag+arr[i][j];
		rdiag=rdiag+arr[(arr.length-1)-i][j];
		}	
	               }
	}
                     
                  for(int ar[]:arr){
	for(int a : ar){
                        System.out.print(" "+a);
                   }
                 System.out.println(" ");
             }

System.out.println("\nSum of left diagonal: "+ldiag+"\nSum of right diagonal: "+rdiag+"\nSum of diagonals: "+(ldiag+rdiag));
          }
	   
}
------------------------------------------------------------------------------------------------------------------------------
31.Create a class Student with 2 data members rno and name. Create one method setData() 
that takes roll number and student name as parameter and stores them in data members rno and name.
Create one more method showData() to print the data member values. Create another class
 ( main class) StudentDemo that creates Student class object and calls setData() 
 and showData() methods.
 Ans:-import java.util.Scanner;
class Student{
	
	private int rollno;
	private String name;
	
	void setData(int rollno, String name){
	this.rollno=rollno;
	this.name=name;
		}

	void showData(){
	System.out.println(rollno+" "+name);
	      }

	}	

class StudentDemo{
public static void main(String args[]){
                         Student s =new Student();
	       s.setData(20,"Rutuja");
	       s.showData();
	        
                         Student s1=new Student();
	       s1.setData(2,"Maya");
	       s1.showData();
             
	/*Scanner sc = new Scanner(System.in);
		System.out.print("Enter Student's name: ");
		String name = sc.nextLine();
		System.out.print("Enter roll number: ");
		int rollno = sc.nextInt();
		Student s =new Student();
		
		s.setData(rollno,name);
		s.showData();*/
	}
}
 -------------------------------------------------------------------------------------------------------------------
32.Modify the above program (no. 30) to count the no of Student objects created.
 [ In this program static variable is required ]
 Ans:-
 import java.util.Scanner;
class Student{
	
	private int rollno;
	private String name;
	private static int objCount;
	
	void setData(int rollno, String name){
	this.rollno=rollno;
	this.name=name;
	ObjCounter();
		}

	void ObjCounter(){
	    objCount++;
		}

                    int getObjCounter(){
	  return objCount;
	}
	
	void showData(){
	System.out.println(rollno+" "+name);
	      }

	}	

class StudentDemo{
public static void main(String args[]){
                         Student s =new Student();
	       s.setData(20,"Rutuja");
	       s.showData();
	        
                         Student s1=new Student();
	       s1.setData(2,"Maya");
	       s1.showData();
	      
	       Student s2=new Student();
	       s2.setData(3,"Aaru");
	       s2.showData();

	       System.out.println("object counter: "+s2.getObjCounter());
             
	/*Scanner sc = new Scanner(System.in);
		System.out.print("Enter Student's name: ");
		String name = sc.nextLine();
		System.out.print("Enter roll number: ");
		int rollno = sc.nextInt();
		Student s =new Student();
		
		s.setData(rollno,name);
		s.showData();*/
	}
}
------------------------------------------------------------------------------------------------------------------------------
33.Write a program to demonstrate functionalities of this keyword in java. 
Ans:-class Forthis{

	int aa;
	void demo(int aa){
	this.aa=aa;
	System.out.println(aa);

}
}

	class Q33{

	public static void main(String args[])
{

Forthis bb = new Forthis();
bb.demo(100);

}
}
--------------------------------------------------------------------------------------------------------------------------
34.Create a class Circle that has two data members, one to store the radius and 
another to store area and three methods first init() method to input radius from
 user, second calculateArea() method to calculate area of circle and third display() 
 method to display values of radius and area. Create class CircleDemo ( main class) 
 that creates the Circle object and calls init(), calculateArea() and display() methods.
 Ans:-
 import java.util.*;
class CircleDemo{

	private int radius;
	private double area;
	final double PI = 3.14;

	void init(int radius){
		this.radius=radius;
	}

	void calculateArea(){
	this.area = PI * (radius * radius);

}

   	void display(){

		System.out.println("Area of circle is" +area);
		}
}

class Q34
{
	public static void main(String args[]){
	Scanner sc = new Scanner(System.in);
	System.out.println("enter radius");
	int radii = sc.nextInt();
	CircleDemo r = new CircleDemo();
	r.init(radii);
	r.calculateArea();
	r.display();
	}
}
 ----------------------------------------------------------------------------------------------------------------------
35.Create a class MathOperation that has four static methods. add() method that takes two 
integer numbers as parameter and returns the sum of the numbers. subtract() method 
that takes two integer numbers as parameter and returns the difference of the numbers. 
multiply() method that takes two integer numbers as parameter and returns the product.
 power() method that takes two integer numbers as parameter and returns the power of 
 first number to second number. Create another class Demo (main class) that takes the 
 two numbers from the user and calls all four methods of MathOperation class by providing
 entered numbers and prints the return values of every method.
 Ans:-
 import java.util.*;
class MathOpr{
	static int add(int n1 , int n2){
	return n1 + n2;
	}
	
	static int sub(int n1 , int n2){
	return n1 - n2;
	}
	
	static int mul(int n1 , int n2){
	return n1 * n2;
	}

	static double power(double n1 , double n2){
	return Math.pow(n1,n2);
	}
}

	class Q35{
	public static void main(String args[]){
	{
	Scanner sc = new Scanner(System.in);
	System.out.println("Enter the two numbers");
	
	int num1 = sc.nextInt();
	int num2 = sc.nextInt();

	System.out.println("addition is" +MathOpr.add(num1,num2));
	System.out.println("substraction is" +MathOpr.sub(num1,num2));
	System.out.println("multiplication is" +MathOpr.mul(num1,num2));
	System.out.println("power is" +MathOpr.power(num1,num2));
		}
	}
}
 --------------------------------------------------------------------------------------------------------------------
36.Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a. two integers 
b. three floats 
c. all elements of array 
d.one double and one integer 
Ans:-
import java.util.Scanner;
 class MathOperation
{  
void mult(int a, int b) 
{  
int c =a*b;
 System.out.println("multiple of 2 int ="+c);
 }
  void mult(float a,float b,float c)
 {
 float d =a*b*c; 
System.out.println("multiple of 3 float ="+d);
 }
  void mult(int arr[])
 {  
int c =1;  
 for(int i=0;i<arr.length;i++) 
    {       
  c =c * arr[i];     
         }      
System.out.println("Array multiple ="+c); 
}
  void mult(double a,int b)
 {    double c =(double)(a*b);  
  System.out.println("multiple of double and int ="+c);
 }  
} 
class Q36{ public static void main(String args[])
 {    
 Scanner sc = new Scanner(System.in); 
   MathOperation m = new MathOperation();  
  m.mult(5,6);  
  m.mult(1.0F,2.0F,3.0F);   
 m.mult(5.0,5);     
  int arr[] = new int [3];  
  System.out.println("Enter the elements");
 for(int i=0;i<arr.length;i++)
 {       
arr[i]=sc.nextInt();
 }    
m.mult(arr); 
} 
}
--------------------------------------------------------------------------------------------------------------------------
37.Create a class Person with properties (name and age) with following features. 
a.Default age of person should be 18.
b.A person object can be initialized with name and age.
c.Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities 
of Person class by creating Person object and calling methods.
Ans:-
import java.util.Scanner;

	class Person
	{
		int age;
		String name;
		
		Person()
		{
			age=18;
		}
		
		void setData(int age, String name)
		{
			this.age=age;
			this.name=name;
		}
		
		void display()
		{
			System.out.println("Name: "+name);
			System.out.println("Age: "+age);
		}
	}

	class Q37
	{
		public static void main(String[] args)
		{
			Scanner scan=new Scanner(System.in);
			System.out.print("Enter Name: ");
			String name=scan.next();
			System.out.print("Enter age: ");
			int age=scan.nextInt();
			
			Person P=new Person();
			P.setData(age,name);
			P.display();
		}
	}
------------------------------------------------------------------------------------------------------------------------------
38.Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.Only parameterized constructor. [Do not overload the constructor]
b.totalSalary always represents salary total of all the employees created.
c.empNo should be auto incremented.
d.display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and 
calls Employee method to display no. of employees and total of their salaries.
Ans:-
import java.util.Scanner;

class Employee{
	private static int empNo=0;
	private int salary;
	private static int totalSalary=0;

	


	Employee(int salary){
		this.empNo++;
		this.salary=salary;
		this.totalSalary=totalSalary+salary;
	}

	void display(){
		System.out.println("empNo : "+empNo+" "+"Salary : "+salary+"  "+"TotalSalary : "+totalSalary);
		
	}
}


public class Q38 {
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		
		Employee e = new Employee(20);
		e.display();
		Employee e1 = new Employee(20);
		e.display();
		
	}
}
----------------------------------------------------------------------------------------------------------------------------
39.Create class Product with three data members (pid, price, quantity) and parameterized 
constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product 
class to calculate and return total amount spent on all products. ( amount spent on single 
product = price of product * quantity of product )
Ans:-
import java.util.*;
import java.lang.*;

class Product{
    public int pid;
    public float price;
    public int quantity;

   Product(){
      
       } 
  
   
   Product(int pid,float price,int quantity){
     this.pid=pid;
     this.price=price;
     this.quantity=quantity;
      
    } 

      static void calculate(Product[] arr){
      double res=0;
      for(Product a:arr){
           res=res+(double)
      (a.price*a.quantity);
        }
       System.out.println("Total Amount spent:"+res);
      }

    void show(){
       System.out.println(pid+""+price+""+quantity);


    }



}


    class Q39{
    public static void main(String args[]){
    Scanner sc=new Scanner(System.in);
    Product pr[]=new Product[5];
    for(int i=0;i<pr.length;i++){
          System.out.print("Enter ID,Price & Quantity:");
          int id=sc.nextInt();
          float price=sc.nextFloat();
          int quantity=sc.nextInt();
          Product p=new Product(id,price,quantity);
          pr[i]=p;
    }
    
   float max=pr[0].price;
   Product p=new Product();
   for(Product a:pr){
         a.show();
         if(a.price>max){
            max=a.price;
            p=a;

        }


    }


       System.out.println("Max Product element:"+p.pid+""+p.price+""+p.quantity);
       Product.calculate(pr);
    }

 
 }

-----------------------------------------------------------------------------------------------------------------------------
40.Create a class Student having data members name, roll no., age and score. 
Write a program to accept 10 records of student and store them in an array. And then arrange 
the student records based on the score group [0-50], [50-65], [65-80], [80-100].
Ans:-
package pratice;

import java.util.*;
class Student{
    private String name;
    private int rollNo;
    private int age;
    private int Score;
     
    Student(){}

   Student(String name,int rollNo,int age,int Score){
            this.name=name;
            this.rollNo=rollNo;
            this.age=age;
            this.Score=Score;
    }

    public int getScore(){
        return Score;
    }

    void ScoreGroup(int Score){
        if(Score<50){
            System.out.println("Grade F");
        }else if(Score>=50 && Score<65 ){
            System.out.println("Grade C");
        }else if(Score>=65 && Score<80 ){
            System.out.println("Grade B");
        }else if(Score>=80 && Score<=100){
            System.out.println("Grade A");
        }
    }
  }

class Que40{
    public static void main(String args[]) {
       Scanner sc=new Scanner(System.in);
     //  Student S=new Student(System.in);
       // S.Student1("pravin",101,24,60);
        
    
          Student a[]=new Student[2];

         // Stud
          for(int i=0;i<a.length;i++){
              System.out.println("Enter the "+(i+1)+" Students Details");
              String name=sc.next();
              int age=sc.nextInt();
              int rollNo=sc.nextInt();
              int score=sc.nextInt();
             Student S=new Student(name,rollNo,age,score);
             a[i]=S;
          }

           for(Student x : a){
             
                 x.ScoreGroup(x.getScore());
           }
}
}

----------------------------------------------------------------------------------------------------------------------------
41.Write a program to demonstrate this() construct functionality.
Ans:-class Employee{
       private int empId;
       private String empName;
       Employee(){
       this(100,"abc");
       }
      Employee(int empId,String empName){
         this.empId=empId;
         this.empName=empName;
     }

      void show(){
           
             System.out.println(empId+""+empName);

       }



  }

   class Q41{

        public static void main(String args[]){
              Employee e=new Employee();
              e.show();
              Employee e1=new Employee(124,"Hannah");
              e1.show();

        }

   }

  
-----------------------------------------------------------------------------------------------------------------------
42.Create a class Tile to store the edge length of a square tile, and create another class
 Floor to store length and width of a rectangular floor. Add method totalTiles(Tile t) in 
 Floor class with Tile as argument to calculate the whole number of tiles needed to cover the floor completely.
 Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. 
 Also print total amount of all flats. 
 Ans:-
 import java.util.*;
  class Tile{
	  int length;
	  Tile(int length){
		  this.length=length;
		  
	  }
	  
  }
  class Floor {
	  int length;
	  int width;
	
		Floor(int length,int width){
			this.length = length;
			this.width = width;
		}
	void totalTiles(Tile t){
	double titlArea = t.length * t.length;
	double floorArea = this.length * this.width;
	int total =(int) (floorArea / titlArea);
	System.out.println("Total tiles "+total); 	
  }
  }
  
  class Q42{
	  public static void main(String args[]){
		  Scanner sc = new Scanner(System.in);
		  System.out.print("Enter length of tile: ");
		  int lt =sc.nextInt();
		  
		  Tile t =new Tile(lt);
		  
		  System.out.print("Enter length and width of floor: ");
		  int lf = sc.nextInt();
		  int wf=sc.nextInt();
		  
		  Floor f = new Floor(lf,wf);
		  f.totalTiles(t);
	  }
	  
  }

 -------------------------------------------------------------------------------------------------------------------------
43.Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor
 that initializes instance variables with some values and a parameterized constructor that takes values for 
 all instance variables and stores them in instance variables. Now create a method named show() 
 to print OneBHK’s instance variable values.Create another class TwoBHK which has (inherites) 
 all the properties and behaviors of OneBHK and a new instance varile room2Area. Then create
 default constructor to initialize all 4 instance variables and a parameterized constructor to take 
 the values for initialization of all instance variables. Override show() method to print all data member information.
 Ans:-
 import java.util.*;
			class OneBHK{
			public double roomArea;
			public double hallArea;
			public int price;
			OneBHK(){
				
			}
			OneBHK(double roomArea,double hallArea,int price){
				this.roomArea=roomArea;
				this.hallArea=hallArea;
				this.price=price;
				
			}
			void show(){
				System.out.println("Area of Room "+roomArea);
				System.out.println("Area of Hall "+hallArea);
				System.out.println("Price is "+price);
				System.out.println("Total Amount of TwoBHK: "+totalAmount1());
				
			}
			
			double totalAmount1(){
				double total =(roomArea + hallArea)* price;
				return total;
			}
		}
			

		class TwoBHK extends OneBHK{
			public double room2Area;
			
			TwoBHK(){
				
			}
			
			TwoBHK(double room2Area,double roomArea,double hallArea,int price){
				super(roomArea,hallArea,price);
				this.room2Area=room2Area;
				
			}
			void  show(){
				super.show();
				System.out.println("Area of TwoBHK Room "+room2Area);
				System.out.println("Total Amount of TwoBHK: "+totalAmount());
			}
			double totalAmount(){
				double total =(room2Area + roomArea + hallArea)* price;
				return total;
			}
		}

		class Q43 {
			public static void main (String[] args){
				TwoBHK t = new TwoBHK(20.2,10.2,23.1,100);
				t.show();
				TwoBHK t1 = new TwoBHK(21.3,9.5,22.1,100);
				t1.show();
				TwoBHK t2 = new TwoBHK(20.5,8.5,5.36,100);
				t2.show();
				
				
				
			}
		


	}
 

==========================================================================================================================
44.Create three classes
-Faculty with two data members facultyId and salary and two methods, one intput() method for 
accepting facultyId as input and another printSalary() to print salary.
-FullTimeFaculty that inherits class Faculty with two data members’ basicSalary and allowance. 
Override input() method in this class that calls super class inut() method and accepts basicSalary 
and allowance as input. Salary should not be accepted as input but should be calculated using 
formula (basicSalary + allowance)
-PartTimeFaculty that inherits class Faculty with two data members’ workingHours, ratePerHour.
 Override input() method in this class that calls super class inut() method and accepts workingHours
 and ratePerHour as input. Salary should not be accepted as input but should be calculated using formula 
 ( workingHour * ratePerHour )
 Ans:-
 import java.util.Scanner;

class Faculty {
    private int facultyID;
    private double salary;

    Faculty() {
        salary = 0;
    }

    void input(int facultyID) {
        this.facultyID = facultyID;
    }

    protected double getSalary() {
        return salary;
    }

    protected void setSalary(double salary) {
        this.salary = salary;
    }

    void printSalary() {
        System.out.println("The salary of facultyID: " + facultyID + " is " + salary + " Rs.");
    }

}

class FullTimeFaculty extends Faculty {
    private double basicSalary;
    private double allowance;

    FullTimeFaculty() {
        super();
        basicSalary = 0;
        allowance = 0;

    }

    void input(int facultyID, double basicSalary, double allowance) {
        input(facultyID);
        this.basicSalary = basicSalary;
        this.allowance = allowance;
        setSalary(basicSalary + allowance);
    }

}

class PartTimeFaculty extends Faculty {
    private double workingHour;
    private double ratePerHour;

    PartTimeFaculty() {
        super();
        workingHour = 0;
        ratePerHour = 0;

    }

    void input(int facultyID, double workingHour, double ratePerHour) {
        input(facultyID);
        this.workingHour = workingHour;
        this.ratePerHour = ratePerHour;
        setSalary(workingHour * ratePerHour);
    }

}

public class Q44 {
    public static void main(String[] args) {

        FullTimeFaculty f = new FullTimeFaculty();
        PartTimeFaculty p = new PartTimeFaculty();

        f.input(100, 5000, 2000);
        p.input(200, 10, 100);

        f.printSalary();
        p.printSalary();

    }
}

 ==========================================================================================================================
45.Create a class Student with two members : rollno and percentage. Create default and parameterized 
constructors. Create method show() to display information. Create another class CollegeStudent inherits 
Student class. Add a new member semester to it. Create default and parameterized constructors. 
Also override show() method that calls super class show() method and displays semester. Create 
another class SchoolStudent inherits Student class. Add a new member className(eg 12th ,10th etc.) 
to it. Create default and parameterized constructors. Also override show() method that calls super 
class show() method and displays className. Create a class( say Demo) with main method that carries 
out the operation of the project : -- has array to store objects of any class(Student,  CollegeStudent 
or SchoolStudent) --create two CollegeStudent  and three SchoolStudent objects and store them inside 
the array -- display all records from the array -- search record on the basic of rollno and check given
 rollno is of SchoolStudent or of CollegeStudent. --count how many students are having A grade, if for A 
 grade percentage >75. 
 Ans:-
 class Student {
    private int rollNo;
    private double percentage;

    Student() {
        // rollNo = -1;
        percentage = 0;
    }

    Student(int rollNo, double percentage) {
        this.rollNo = rollNo;
        this.percentage = percentage;
    }

    void show() {
        System.out.print("Roll no. : " + rollNo + " Percentage: " + percentage + "%");
    }

    int getRollNo() {
        return rollNo;
    }

    double getPercentage() {
        return percentage;
    }

}

class CollegeStudent extends Student {
    private int semester;

    CollegeStudent() {
        semester = 0;
    }

    CollegeStudent(int rollNo, double percentage, int semester) {
        super(rollNo, percentage);
        this.semester = semester;
    }

    void show() {
        super.show();
        System.out.println(" Sem: " + semester);
    }

}

class SchoolStudent extends Student {
    private int className;

    SchoolStudent() {
        className = 0;
    }

    SchoolStudent(int rollNo, double percentage, int className) {
        super(rollNo, percentage);
        this.className = className;
    }

    void show() {
        super.show();
        System.out.println(" className: " + className);
    }

}

public class Q45 {

    public static void main(String[] args) {
        Student sArr[] = { new CollegeStudent(10, 60, 1), new CollegeStudent(12, 80, 2), new SchoolStudent(15, 95, 10),
                new SchoolStudent(16, 90, 8), new SchoolStudent(18, 70, 7) };

        for (Student s : sArr) {
            s.show();
        }

        int searchRollNo = 15;

        for (Student s : sArr) {
            if (s.getRollNo() == searchRollNo) {

                if (s instanceof CollegeStudent)
                    System.out.println("This is a college student with following details:");
                else if (s instanceof SchoolStudent)
                    System.out.println("This is a School student with following details:");
                s.show();
            }
        }
        int count = 0;
        for (Student s : sArr) {
            if (s.getPercentage() >= 75) {
                System.out.print("Grade = A  ");
                s.show();
                count++;
            }
        }

        System.out.println("No of students with A grade: " + count);

    }

}
 ========================================================================================================================
46.Create a program to demonstrate the use of instanceof operator or secure reference down casting.
Ans:-
import java.util.*;

class Shape {

    int length;
    int height;

    void show() {
        System.out.println("Length: " + length + " height: " + height);
    }

    Shape() {
    }

    Shape(int length, int height) {
        this.length = length;
        this.height = height;
    }

    void Area() {
    };

}

class Rectangle extends Shape {

    void Area() {
        super.show();
        System.out.println("Area:  " + (length * height));
    }

    void diagonal() {
        double a = Math.pow(length, 2) + Math.pow(height, 2);
        System.out.println(" Diagonal is: " + (Math.sqrt(a)));
    }

    Rectangle() {
    }

    Rectangle(int length, int height) {
        super(length, height);
    }

}

class Triangle extends Shape {
    void Area() {
        super.show();
        System.out.println("Area:  " + (0.5 * length * height));
    }

    Triangle() {
    }

    Triangle(int length, int height) {
        super(length, height);
    }
}

public class Q46 {
    public static void main(String[] args) {

        Shape sArr[] = { new Rectangle(30, 40), new Triangle(10, 20) };

        sArr[0].Area();

        Rectangle r = (Rectangle) sArr[0];   //downcasting
        r.diagonal();
        sArr[1].Area();

    }

}

=========================================================================================================================
47.Create a program to demonstrate constructor chaining.
Ans:-
class Abc
{
	Abc()
	{
		System.out.println("No-argument Constructor Abc");
	}
	Abc(int i)
	{
		System.out.println("Parameterized Constructor Abc");
	}
}
class Pqr extends Abc
{
	Pqr()
	{
		
		System.out.println("No-argument Constructor Pqr");
	}
	Pqr(int i)
	{
		System.out.println("Parameterized Constructor Pqr");
	}
}
class Q47
{
	public static void main(String args[])
	{
		Pqr p = new Pqr();
		Pqr P1 = new Pqr(11);
	}
}
=============================================================================================================================
48.Create an Abstract class Processor with int member variable data  and method showData to display
 data value. Create abstract method process() to define processing of member data. Create a class  
 Factorial using abstract class Processor  to calculate and print factorial of a number by overriding 
 the process method. b. Create a class Circle using abstract class Processor to calculate and print 
 area of a circle by overriding the process method.Ask user to enter choice (factorial or circle area). 
 Also ask data to work upon. Use Processor class reference to achieve this mechanism.
 Ans:-
 import java.util.Scanner;
abstract class Processor {
    double data;

    void showdata(){
     System.out.println(data);
    }

    abstract void process();
}

class factorial extends Processor{
   void process(){
        int n =5;
       int sum=1;
        for(int i= 1; i<=n; i++){
            sum = sum *i;
        }
        data = sum;
   }
}	
class circle extends Processor{
    void process(){
        int r=5;
        double area;
        area = 3.14f * r * r;
        data = area;
    }
}
class Q48{
public static void main(String args[]){
    Processor p = new factorial();
    Processor p1 = new circle();
      p.process();
      p1.process();
      p.showdata();
      p1.showdata();
}}
 ===========================================================================================================================
49.Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method 
calcTax(). a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax 
on yearly salary. b. Create class Product(pid,price,quantity) and implement Taxable to calculate 
salesTax on unit price of product. c. Create class for main method(Say XYZ), accept employee
 information and a product information from user and print income tax and sales tax respectively.
 Ans:-
 import java.util.Scanner;

interface taxable{
    double salesTax = 0.07;
    double incomeTax = 0.10;

   void calcTax();
}

class Employee implements taxable{
        int empid;
        int salary;
        String name;
        Employee() {}

        Employee( int empid,int salary,  String name  ){
            this.empid = empid;
            this.salary=salary;
            this.name=name;
        }

      public void calcTax(){
             double incomeTax1 = salary * incomeTax ;
             System.out.println("Total incometax is "+incomeTax1);
             }

}

class product implements taxable{
    int pid;
    int price;
    int quantity;
    product() {}

    product( int pid, int price,  int quantity  ){
        this.pid = pid;
        this.price=price;
        this.quantity=quantity;
    }

  public void calcTax(){
         double saleTax1 = ( price * quantity ) * salesTax ;
         System.out.println("Total saletax is "+saleTax1);
         }

}

class Q49{
public static void main(String args[]){
    taxable t = new Employee(1 , 15000, "jack");
    taxable t1 = new product(1 , 400, 5);
    t.calcTax();
    t1.calcTax();
}}
 ========================================================================================================================
50.Explain the importance of toString() and equals() method of the Object class and override them on 
class Employee(empId,name,salary).
 a. Create class for main method(say XYZ),and accept five employees information and store in an array.
 Also ensure if entered empId already exist or not (use equals method). 
 b. Display all employee info using toString method.
 Ans:-import java.util.Scanner;

class Employee{
	int empId;
	String empName;
	Double salary;
	Employee(int empId,String empName,Double salary){
		this.empId=empId;
		this.empName=empName;
		this.salary=salary;
	}
	@Override
	public String toString() {
		return "Employee"+ empId + " empName=" + empName + " salary=" + salary ;
	}
	int getid() {
		return empId;
	}
}
public class Q50 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		Employee arr[]=new Employee[4];
		int count=0;
		outer:
		for(int i=0;i<arr.length;) {
		//outer:
			System.out.println("Enter Employee Id,name, salary");
		int eid=sc.nextInt();
		//sc.Next();
		String name1=sc.next();
		double sal=sc.nextDouble();
			for(int j=0;j<count;j++) {
				int k=arr[j].getid();
		        if(k==eid) {
		        	System.out.println("These Employee id already exist:");
		        	continue outer;
		        }
			}
		Employee e1=new Employee(eid,name1,sal);
		
		arr[i]=e1;
		count++;
		i++;
		}
		for(Employee e: arr) {
			System.out.println(e.toString());
		}
	}

}
 =========================================================================================================================
51.Create a program that helps banks to maintain records. It should have following facilities. 
o Anybody can create current or saving account with following initial information: account number, 
name, balance, and branch. o display account detail for a particular accounts. 
o display total money deposited in bank. o allow deposit and  withdrawal in an account  . 
o for saving account opening balance and minimum balance must be 5000. o for current account 
opening balance and minimum balance must be 1000. o can not withdraw the amount from the account 
that makes balance less than the minimum balance. 
Ans:-
//package a1;
import java.util.Scanner;



class Customer{
	double accountNo;
	String Name;
	 double balance;
	Customer(double accountNo,String Name,double balance){
		this.accountNo=accountNo;
		this.Name=Name;
		this.balance=balance;
	}
	@Override
	public String toString() {
		return "Account No " + accountNo + ", Name=" + Name + ", balance=" + balance;
	}
	 double getaccNo() {
		 return accountNo;
	 }
	 double getbal() {
		 return balance;
	 }
	 void setbal(double balance) {
		 this.balance=balance;
	 }
	
}
class savingAcc extends Customer{
	savingAcc(double accountNo,String Name,double balance){
		super(accountNo,Name,balance);
	}
}
class currentAcc extends Customer{
	currentAcc(double accountNo,String Name,double balance){
		super(accountNo,Name,balance);
	}
}
public class Q51 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		Customer c[]= new Customer[2];
		
		int i=0;
		/*for(int i=0;i<c.length;i++) {
		System.out.println("Enter Saving Account details");
		double acc=sc.nextDouble();
		String name=sc.next();
		double bal=sc.nextDouble();
		Customer c1=new savingAcc(acc,name,bal);
		c[i]=c1;
		}
		System.out.println("");
		for(int i=0;i<c2.length;i++) {
			System.out.println("Enter Current Account details");
			double acc=sc.nextDouble();
			String name=sc.next();
			double bal=sc.nextDouble();
			Customer c3=new currentAcc(acc,name,bal);
			c2[i]=c3;
			}
		System.out.println("");
		System.out.println("Saving Account details");
		for(Customer s: c) {
			System.out.println(s.toString());
		}
		System.out.println("");
		System.out.println("Current Account details");
		for(Customer s1: c2) {
			System.out.println(s1.toString());
		}*/
		while(true) {
		System.out.println("Enter Your Choice");
		System.out.println("1.Add Saving Account Details\n2.Add Current Account Details\n"
				+ "3.Enter Amount in Account\n4.withdraw Amount from Account\n5.Display Information Of ACcounts\n6.Display Information Of Particular ACcounts\n7.Exit");
		int ch=sc.nextInt();
		switch(ch) {
		case 1:{
			System.out.println("Enter Saving Account details");
			double acc=sc.nextDouble();
			String name=sc.next();
			double bal=sc.nextDouble();
			//Customer c1=new savingAcc(acc,name,bal);
			//c[i]=c1;
			c[i]=new savingAcc(acc,name,bal);
			i++;}
			break;
		case 2:{
			System.out.println("Enter Current Account details");
			double acc=sc.nextDouble();
			
			String name=sc.next();
			double bal=sc.nextDouble();
			//Customer c3=new currentAcc(acc,name,bal);
			//c[i]=c3;
			c[i]=new currentAcc(acc,name,bal);
			i++;}
			break;
		case 3:	
			System.out.println("Enter Account Number");
			double k2=sc.nextDouble();
			for(Customer cc: c) {
				if(cc.getaccNo()== k2) {
					System.out.println("Enter Amount You Want to deposite");
					double k3=sc.nextDouble();
					double b=cc.getbal()+k3;
					cc.setbal(b);
				}
			}
		case 4:	
			System.out.println("Enter Account Number");
			double k4=sc.nextDouble();
			for(Customer cc: c) {
				if(cc.getaccNo()== k4) {
					System.out.println("Enter Amount You Want to withdraw");
					double k3=sc.nextDouble();
					if(cc instanceof savingAcc) {
					if(cc.getbal()>5000 && cc.getbal()> (5000+k3)) {
					double b=cc.getbal()-k3;
					cc.setbal(b);
					}
					else {
						System.out.println("Minimum Balance Is low.Saving Account Minimum balance should be 5000");
					}}
					else if(cc instanceof currentAcc) {
						if(cc.getbal()>1000 && cc.getbal()> (1000+k3)) {
							double b=cc.getbal()-k3;
							cc.setbal(b);
							}
							else {
								System.out.println("Minimum Balance Is low.Current Account Minimum balance should be 1000");
							}
					}
				}
			}
			break;
		case 5:	
			for(Customer cc:c) {
				if(cc  instanceof savingAcc) {
				System.out.println("Saving Account DEtails");
				System.out.println(cc.toString());
				}
				else if(cc  instanceof currentAcc) {
					System.out.println("Current Account DEtails");
					System.out.println(cc.toString());
				}
			}
			break;
		case 6:System.out.println("Enter Accout number:\n");{
		       double k1=sc.nextDouble();
		       for(Customer cc:c) {
		    	   if(cc.getaccNo()==k1) {
		    		   System.out.println(cc.toString());   
		    	   }
		       }}
			break;
			
		case 7 :return;	
		}
	}

}
}
===============================================================================================================================
52.Input name of a person and count how many vowels it contains.  Use String class functions. 
Ans:-
import java.util.Scanner;
//class {

//}

class NameVowels{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter your name: ");
		String name = sc.next().toLowerCase();
		
		int count=0;
		for(int i=0; i<name.length(); i++){
			if(name.charAt(i)=='a'||name.charAt(i)=='e'||name.charAt(i)=='i'||name.charAt(i)=='o'||name.charAt(i)=='u'){
				count++;
			}
		}

		System.out.println("Count of vowels is: "+count);
	}
}
===========================================================================================================================
53.Input data exactly in the following format, and print sum of all integer values.
 “67, 89, 23, 67, 12, 55, 66”.   (Hint use String class split method and Integer class parseInt method) .
 Ans:-
 import java.util.Scanner;
//class {

//}

class SplitCount{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);

		System.out.println("Enter number in csf: ");
		String str = sc.nextLine();
		String arr[] =str.split(",");

		int sum=0;
		for(String i: arr){
			sum+=Integer.parseInt(i);
//			System.out.println(i);
		}
		System.out.println("Sum is: "+sum);

	}
}
 ========================================================================================================================
54.Write a program to reverse the given String.
Ans:-import java.util.*;
//class {

//}

class RevString{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);

		System.out.println("Enter a string to reverse it: ");
		String str = sc.nextLine();
		StringBuffer sbr = new StringBuffer(str);
		
		System.out.println(sbr.reverse());
		
		//System.out.println("Enter a string to reverse it: ");
		//String str1 = sc.nextLine();

		//System.out.println(str1.split("").reverse().join(""));
	}
}

=========================================================================================================================
55.Write a program to count no of words in the String.
Ans:-
import java.util.Scanner;
//class {

//}

class CountWords{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter string to count words: ");
		String str = sc.nextLine().toLowerCase();
 
		//String arr[] = 
		int count=1;
		for(int i=0; i<str.length(); i++){
			if(!(str.charAt(i)>='a' && str.charAt(i)<='z') ){
				count++;
			}
		}
		System.out.println(count);
		
	}
}

===========================================================================================================================
56.Write a program to convert very first character of every word in uppercase in a String.
Ans:-
import java.util.Scanner;
//class {

//}

class UpperCase{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);

		System.out.println("Enter a String ");
		String str = sc.nextLine();

		String arr[] = str.split(" ");

		int count=1;
		for(int i=0; i<arr.length; i++){

			System.out.print(arr[i].substring(0,1).toUpperCase()+arr[i].substring(1,arr[i].length()).toLowerCase()+" ");
		}
		//System.out.println(str);


		
	}
}

===============================================================================================================================
57.Write a program to reverse every word of the String.
Ans:-
import java.util.Scanner;
//class {

//}

class ReverseWord{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);

		System.out.println("Enter a String ");
		String str = sc.nextLine();


		//StringBuilder sbr = new StringBuilder(str);

		String arr[] = str.split(" ");

		for(int i=0; i<arr.length; i++){
			StringBuilder sbr = new StringBuilder(arr[i]);
			System.out.print(sbr.reverse()+" ");
			
		}


		
	}
}
============================================================================================================================
58.Store name of weekdays in an array (starting from “Sunday” at 0 index). Ask day position from user and print
 day name. Handle array index out of bound exception and give proper message if user enter day index outside range (0-6). 
 Ans:-package a3;
import java.util.Scanner;
public class Q58 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String str2[]= {"Sun","Tue","Wed","Thur","Fri","Sat","Mon"};
		int a=sc.nextInt();
		for(int i=0;i<str2.length;i++) {
			if(i==(a-1)) {
				System.out.print(str2[i]);
				break;
			}
		}
		

	}

}
 ===============================================================================================================================
59.Create a class Voter(voterId, name, age) with parameterized constructor.  The parameterized 
constructor should throw a checked exception if age is less than 18. The message of exception is 
“invalid age for voter ” 
Ans:-
package Excep;

import java.util.*;
class Voter {
	private int voterid;
	private String name;
	private int age;
	
	Voter(int voterid,String name,int age) 
	{
		this.voterid=voterid;
		this.name=name;
		this.age=age;
	}
	public String toString()
	{
		return "Voter Id : " +voterid+ " Voter Name : \n"+name+" Voter Age :"+age;
	}
	
	
	
}
public class Qst59Demo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		try {
			System.out.println("Enter id : ");
			int id=sc.nextInt();
			System.out.println("Enter name :");
			String name=sc.next();
			System.out.println("Enter age : ");
			int age=sc.nextInt();
			if(age<18)
			{
				throw new Exception("Invalid age");
			}
			else {
				Voter v=new Voter(id,name,age);
				System.out.println(v);
				}
		}
			catch(Exception e){
				System.out.println(e);
			}
		

	}

}
========================================================================================================================
60.Create Interface StudentFee and declare following method. 
 getFee() throws InvalidFeeException. This method ask fees from user and throws exception 
 if user enters invalid or negative fees Create class Student with members (name, fees) and implement 
 the StudentFee Interface.
 Ans:-
 package Excep;
import java.util.*;

interface StudentFee
{
	int getFee() throws Exception;
}
class StudentChild implements StudentFee{
	private int fee;
	public int getFee() throws Exception
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter fee : ");
		fee=sc.nextInt();
		if(fee<=0 || fee >100000)
		{
			throw new Exception("Invalid fee");
		}
		return fee;
	}
}
public class Qst60Demo {
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		try {
			StudentChild c=new StudentChild();
			System.out.println(c.getFee());
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		
		
			
	}

}
 =========================================================================================================================
61.Create a Thread class to print following star (*) pattern on screen with delay of 1 second between
 each * print. Number of lines in the pattern should be passed to the constructor of Thread class. 
 *  * * * *  * * * * * * * * * * Use this class in main method and ask user to enter number of lines to print.
 Ans:-import java.util.Scanner;

class MyThread extends Thread{
	int row;
	
	MyThread(int row){
		this.row = row;
	}
	
	@Override
	public void run() {
		for(int i=0; i<row; i++) {
			
			for(int j=0; j<=i; j++) {
				System.out.print("* ");
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			System.out.println();
			
		}
	};
}

public class Q61 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number of rows : ");
		int row = sc.nextInt();
		
		MyThread m = new MyThread(row);
		m.start();
	}

}

 ===============================================================================================================================
62.Create a class that checks whether a given number is prime or not using  Runnable interface.
Anns:-import java.util.Scanner;

class PrimeCheck implements Runnable{

	int num;
	
	
	PrimeCheck(int num){
		this.num = num;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		int i;
		for(i=2; i<num/2; i++) {
			if(num%i == 0) {
				System.out.println(+num+" is not a Prime number");
				break;
			}
		}
		if(num%i != 0) {
			System.out.println(num+" is a Prime number");
		}
	}
	
}

public class Q62 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter a number to check if it is a Prime number or not : ");
		int num = sc.nextInt();
		
		PrimeCheck p = new PrimeCheck(num);
		Thread t = new Thread(p);
		
		t.start();
	}

}
============================================================================================================================
63.Write a program to count how many times character ‘t’ occurs in a file. 
Ans:-//package p1;
import java.io.*;

public class Q63 {

	public static void main(String[] args) throws IOException {
		FileOutputStream f1=new FileOutputStream("E:\\corejava\\DayFile2\\Demo3.txt");
		 String s=" Hi This is demo of FileOutputStream:\n ";
		 //f1.write(s); error as byte by byte
		 for(int i=0;i<s.length();i++)
		 {
			 f1.write(s.charAt(i));
			 
		 }
         f1.close();
         System.out.println("Success");
         int ch=-1;
         int count=0;
         FileInputStream f2=new FileInputStream("E:\\corejava\\DayFile2\\Demo3.txt");
         {
        	 while((ch=f2.read()) != -1)
            {
	           System.out.print((char)ch);
	           char ch1=(char)ch;
	           if(ch1=='t')
	           {
	        	   count++;
	           }
            }
        	
         }
         System.out.println(count);
         f2.close();
	}

}

============================================================================================================================
64.Write a program to count no of words in a text file and average word size.
Ans:-//package assignmentOnFile;
import java.io.*;

public class Q64 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
        FileInputStream f1=new FileInputStream("E:\\corejava\\DayFile2\\Demo3.txt");
        
       
        
	}

}

===========================================================================================================================
65.Write a program to count number of bytes in a image file(jpeg/png/gif). 
 Also find how much time it will take to upload the file on server if internet speed is 256 bps(bits per second).
 Ans:-import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;

public class Q65 {

	public static void main(String[] args) throws IOException{
		String dirName="C:\\Users\\Acer\\OneDrive\\Pictures\\Screenshots";
		ByteArrayOutputStream baos=new ByteArrayOutputStream(1000);
		BufferedImage img=ImageIO.read(new File(dirName,"dip.png"));
		ImageIO.write(img, "jpg", baos);
		baos.flush();
 
		String base64String=Base64.encode(baos.toByteArray());
		baos.close();
 
		byte[] bytearray = Base64.decode(base64String);
 
		BufferedImage imag=ImageIO.read(new ByteArrayInputStream(bytearray));
		ImageIO.write(imag, "jpg", new File(dirName,"snap.jpg"));
	}

}
 ==========================================================================================================================
66.Write a program to store your shopping details in a binary file(shopping.dat) with information itemName, price,
 quantity. (Use ObjectOutputStream to store Item class object ).
 Ans:-import java.io.*;

class Shopping implements Serializable{
		private String itemName;
		private float price;
	        public int quantity;
		public Shopping () {

		}
		public Shopping(String itemName,float price,int quantity ) {
			this.itemName = itemName;
			this.price = price;
	                this.quantity=quantity;
		}
		@Override
		public String toString() {
			return itemName + " " + price + " " + quantity;
		}
		
	}
	

	public class Q66 {

		public static void main(String[] args) throws IOException,ClassNotFoundException {
			FileOutputStream f = 
					new FileOutputStream("D:\\core_java\\codes\\shopping.dat");
			
			ObjectOutputStream o = new ObjectOutputStream(f);
			
			o.writeObject(new Shopping("abc",2300f,5));
			o.close();	
			f.close();
			System.out.println("success");
		}

	}
 ===================================================================================================================
67.Write a program to read data from shopping.dat file creted in above problem and find total money spent on all 
shopping items. . (Use ObjectInputStream to read Item class object).
Ans:-
import java.io.*;

public class Q67 {

	public static void main(String[] args)throws IOException, ClassNotFoundException {
		FileInputStream f = 
				new FileInputStream("D:\\core_java\\codes\\shopping.dat");
		
		ObjectInputStream o = new ObjectInputStream(f);
		
		Shopping s = (Shopping)o.readObject();
		
		System.out.println(s); 
				
		f.close();
		System.out.println("success");
	}

}
==========================================================================================================================
                                                     THANK YOU!!!!!!!!!